user  nginx;
worker_processes  auto;
worker_cpu_affinity auto;


error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {

    worker_connections 1024;
    use epoll;
    multi_accept on;
}


http {
    #limit_req_zone $binary_remote_addr zone=global_zone:50m rate=6000r/m;
    #limit_conn_zone $binary_remote_addr zone=connectionzone:50m;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  extendedlog  '$host $remote_addr - $remote_port [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" $server_port $http_x_forwarded_for';
    
    access_log /var/log/nginx/access.log extendedlog;    

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    upstream node-ws {
        server 127.0.0.1:9944; # max_fails=5 max_conns=6000 weight=6000; 
    }
    
    server {
        client_body_timeout 16s;
        client_header_timeout 16s;

        #limit_req zone=global_zone;

        listen 443 ssl;
        #proxy_protocol;
        #ssl on;

        #server_name  _;
        server_name *.newdevops.biz;

        ssl_certificate /etc/ssl/certs/newdevops.biz.pem;
        ssl_certificate_key /etc/ssl/private/newdevops.biz.key;

        location / {
        
        #limit_req zone=global_zone;
	    #limit_conn connectionzone 5000;

        if ($host ~* ws.newdevops.biz$) {
                proxy_pass http://node-ws;
            }

#	    if ($host ~* rpc.newdevops.biz$) {
#                proxy_pass http://node-rpc;
#            }
	    
#        if ($host = 'test1.newdevops.biz') {
#                proxy_pass http://node-ws;
#            }
          
#        if ($host = 'test2.newdevops.biz') {
#                proxy_pass http://kusama-ws;
#            }

	    proxy_set_header Host $host;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }
    }
}
